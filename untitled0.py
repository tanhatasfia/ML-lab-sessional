# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vdwoc-eqKdYkw7-V2YZFiBbA3zdX3way
"""

import pandas as pd
from sklearn.linear_model import LinearRegression
import numpy as np

from zipfile import ZipFile

# creating an object of zipfile class
zipFileObject = ZipFile('/content/drive/MyDrive/ml lab3/archive (1).zip')
zipFileObject.extractall('/tmp/dataset/')

import pandas as pd

# dataframe ekta dataset ke encapsulate kore, jemon ekta zipfile ekta zip ke extract kore

df = pd.read_csv('/tmp/dataset/Dhaka_homeprices_dataset.csv');
df

df.isnull().sum()

from sklearn.preprocessing import  PolynomialFeatures

poly=PolynomialFeatures(degree=2,include_bias=False)



X=df['area']
y=df['price']

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2)

poly_features =poly.fit_transform(X_train.values.reshape(-1,1))



poly_features

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2)

poly_reg_model = LinearRegression()

poly_reg_model.fit(poly_features,y_train)

poly_features_test = poly.fit_transform(X_test.values.reshape(-1,1))

poly_features_test

y_predicted = poly_reg_model.predict(poly_features_test)

y_predicted



from sklearn.metrics import mean_absolute_error, mean_squared_error

mae = mean_absolute_error(y_test, y_predicted)
mse = mean_squared_error(y_test, y_predicted)
rmse = np.sqrt(mse)

print(f'Mean absolute error: {mae:.2f}')
print(f'Mean squared error: {mse:.2f}')
print(f'Root mean squared error: {rmse:.2f}')



regressor = LinearRegression()

regressor.fit(X_train.values.reshape(-1,1),y_train.values.reshape(-1,1))

y_pred = regressor.predict(X_test.values.reshape(-1,1))

mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)

print(f'Mean absolute error: {mae:.2f}')
print(f'Mean squared error: {mse:.2f}')
print(f'Root mean squared error: {rmse:.2f}')