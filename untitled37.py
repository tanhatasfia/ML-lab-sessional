# -*- coding: utf-8 -*-
"""Untitled37.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TP1iHJ7oX0Dn7j-1OHhsZT-XhosYjNmH
"""

import pandas
inputDataFrame=pandas.read_csv('/content/eval.csv')
inputDataFrame

import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt
from keras.models import Sequential,Model
from keras.layers import Dense, Input

input=Input(shape=6)
layer1=Dense(units=1,activation='relu',use_bias=True,name="dense-8")
layer2=Dense(units=7,activation='relu',use_bias=True)
layer3=Dense(units=6,activation='relu',use_bias=True)
layer4=Dense(units=6,activation='relu',use_bias=True)
layer5=Dense(units=6,activation='relu',use_bias=True)
layer6=Dense(units=6,activation='relu',use_bias=True)

model=Sequential()
model.add(input)
model.add(layer1)

model=Sequential()
model.add(input)
model.add(layer1)

model.summary()

from keras.utils.vis_utils import plot_model
plot_model(model, to_file='model_plot.png', show_shapes=True, show_layer_names=True)

model.add(layer3)
model.add(layer4)
model.add(layer5)
model.add(layer6)

x1s=inputDataFrame['gold'].to_numpy()
x2s=inputDataFrame['age'].to_numpy()
x3s=inputDataFrame['iron'].to_numpy()
x4s=inputDataFrame['silver'].to_numpy()
x5s=inputDataFrame['inEgypt'].to_numpy()
x6s=inputDataFrame['isAKing'].to_numpy()
y1s=inputDataFrame['real_price'].to_numpy()

x1s=x1s.reshape(x1s.shape[0],1)
x2s=x2s.reshape(x2s.shape[0],1)
x3s=x1s.reshape(x1s.shape[0],1)
x4s=x2s.reshape(x2s.shape[0],1)
x5s=x1s.reshape(x1s.shape[0],1)
x6s=x2s.reshape(x2s.shape[0],1)

x=np.concatenate((x1s,x2s,x3s,x4s,x5s,x6s),axis=1)

import sklearn
from sklearn.model_selection import train_test_split
xTrain, xTest, y1sTrain, y1sTest = train_test_split(x, y1s, test_size=0.20, random_state=42)
print(f'x={xTrain[0]},y1={y1sTrain[0]}')

model.compile(loss='mse',metrics=['mae','mse'],optimizer=tf.optimizers.Adam(learning_rate=0.005))

model.fit(x=xTrain,y=y1sTrain,validation_data=(xTest, y1sTest),batch_size=128, epochs=20)

input

y2s=inputDataFrame['black_market_price'].to_numpy()

import sklearn
from sklearn.model_selection import train_test_split
xTrain, xTest, y2sTrain, y1sTest = train_test_split(x, y2s, test_size=0.20, random_state=42)
print(f'x={xTrain[0]},y2={y2sTrain[0]}')

model.compile(loss='mse',metrics=['mae','mse'],optimizer=tf.optimizers.Adam(learning_rate=0.005))

model.fit(x=xTrain,y=y1sTrain,validation_data=(xTest, y1sTest),batch_size=128, epochs=20)