# -*- coding: utf-8 -*-
"""Untitled32.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17DQJ7HpTxzwSKeI6mn1b-ZV0qdBW9Q2t
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.datasets import fetch_california_housing
df= fetch_california_housing()

dataset = pd.DataFrame(df.data)
dataset.columns=df.feature_names

dataset



dataset["Price"]=df.target

dataset

X=dataset.iloc[:,:-1]
y=dataset.iloc[:,-1]

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2)

from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
poly= PolynomialFeatures(degree=2, include_bias=False)

poly_features_train=poly.fit_transform(X_train)
poly_features_test=poly.fit_transform(X_test)

poly_reg_model=  LinearRegression()
poly_reg_model.fit(poly_features_train,y_train)
y_pred_linear =poly_reg_model.predict(poly_features_test)

y_pred_linear

poly_features_train

from sklearn.linear_model import Lasso
lasso_regressor=Lasso(alpha=0.5)
lasso_regressor.fit(X_train,y_train)
y_pred_lasso=lasso_regressor.predict(X_test)

y_pred_lasso

from sklearn.linear_model import Ridge
ridge=Ridge(alpha=0.5)
ridge.fit(X_train,y_train)
y_pred_ridge=ridge.predict(X_test)

y_pred_ridge

lasso_regressor.coef_

ridge.coef_

poly_reg_model.coef_

print(poly_reg_model.score(poly_features_test,y_test))
print(poly_reg_model.score(poly_features_train,y_train))

print(lasso_regressor.score(X_test,y_test))
print(lasso_regressor.score(X_train,y_train))
print(ridge.score(X_test,y_test))
print(ridge.score(X_train,y_train))

from sklearn.metrics import mean_absolute_error, mean_squared_error
mae = mean_absolute_error(y_test, y_pred_linear)
mse = mean_squared_error(y_test, y_pred_lasso)
mee = mean_squared_error(y_test, y_pred_ridge)
rmse = np.sqrt(mse)

print(f'Mean absolute error: {mae:.2f}')
print(f'Mean squared error: {mse:.2f}')
print(f'Root mean squared error: {rmse:.2f}')

x=dataset(dataset.drop(dataset["Price"])) ***